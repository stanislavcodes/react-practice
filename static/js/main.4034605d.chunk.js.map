{"version":3,"sources":["components/Product.jsx","components/ProductsTable.jsx","components/Filters.jsx","api/users.js","api/categories.js","App.jsx","api/products.js","helpers/getFilteredProducts.js","index.jsx"],"names":["Product","product","id","name","category","user","className","role","icon","title","classNames","sex","ProductsTable","products","href","map","CategoryButton","onCategoryClick","isActive","type","onClick","Filters","users","categories","selectedCategories","onUserFilterChange","onCategoryFilterChange","onQueryFilterChange","useState","query","setQuery","currentUserIdFilter","setCurrentUserIdFilter","handleUserFilterChange","placeholder","value","onChange","event","newQuery","target","length","includes","prev","filter","categoryId","ownerId","categoriesFromServer","find","usersFromServer","App","userIdFilter","setUserIdFilter","categoryIdsFilter","setCategoryIdsFilter","queryFilter","setQueryFilter","filteredProducts","userId","categoryIds","normalizedQuery","toLowerCase","split","Boolean","join","getFilteredProducts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4034605d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nexport const Product = ({ product }) => {\n  const {\n    id,\n    name,\n    category,\n    user,\n  } = product;\n\n  return (\n    <tr data-cy=\"Product\">\n      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n        {id}\n      </td>\n\n      <td data-cy=\"ProductName\">\n        {name}\n      </td>\n\n      <td data-cy=\"ProductCategory\">\n        <span role=\"img\" aria-label=\"emoji\">\n          {category.icon}\n        </span>\n        {` - ${category.title}`}\n      </td>\n\n      <td\n        data-cy=\"ProductUser\"\n        className={classNames({\n          'has-text-link': user.sex === 'm',\n          'has-text-danger': user.sex === 'f',\n        })}\n      >\n        {user.name}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Product } from './Product';\n\nexport const ProductsTable = ({ products }) => (\n  <table\n    data-cy=\"ProductTable\"\n    className=\"table is-striped is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            ID\n            <a href=\"#/\">\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            Product\n            <a href=\"#/\">\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            Category\n            <a href=\"#/\">\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            User\n            <a href=\"#/\">\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n              </span>\n            </a>\n          </span>\n        </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {products.map(product => (\n        <Product product={product} key={product.id} />\n      ))}\n    </tbody>\n  </table>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nconst CategoryButton = ({\n  title,\n  onCategoryClick,\n  isActive,\n}) => (\n  <button\n    type=\"button\"\n    data-cy=\"Category\"\n    className={classNames(\n      'button mr-2 my-1',\n      {\n        'is-info': isActive,\n      },\n    )}\n    aria-label={`${title} filter button`}\n    onClick={onCategoryClick}\n  >\n    {title}\n  </button>\n);\n\nexport const Filters = ({\n  users,\n  categories,\n  selectedCategories,\n  onUserFilterChange,\n  onCategoryFilterChange,\n  onQueryFilterChange,\n}) => {\n  const [query, setQuery] = useState('');\n  const [currentUserIdFilter, setCurrentUserIdFilter] = useState(0);\n\n  const handleQueryChange = (event) => {\n    const newQuery = event.target.value;\n\n    onQueryFilterChange(newQuery);\n    setQuery(newQuery);\n  };\n\n  const handleCategoryFilterChange = (id) => {\n    if (selectedCategories.includes(id)) {\n      onCategoryFilterChange(prev => (\n        prev.filter(categoryId => categoryId !== id)\n      ));\n    } else {\n      onCategoryFilterChange(prev => [...prev, id]);\n    }\n  };\n\n  const handleUserFilterChange = (id) => {\n    onUserFilterChange(id);\n\n    if (id === currentUserIdFilter) {\n      setCurrentUserIdFilter(0);\n    } else {\n      setCurrentUserIdFilter(id);\n    }\n  };\n\n  const handleInputClear = () => {\n    onQueryFilterChange('');\n    setQuery('');\n  };\n\n  const handleResetFilters = () => {\n    onCategoryFilterChange([]);\n    setCurrentUserIdFilter(0);\n    setQuery('');\n    onUserFilterChange(0);\n    onCategoryFilterChange(0);\n    onQueryFilterChange('');\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs has-text-weight-bold\">\n        <a\n          data-cy=\"FilterAllUsers\"\n          href=\"#/\"\n          className={classNames({\n            'is-active': currentUserIdFilter === 0,\n          })}\n          onClick={() => handleUserFilterChange(0)}\n        >\n          All\n        </a>\n\n        {users.map(user => (\n          <a\n            data-cy=\"FilterUser\"\n            href=\"#/\"\n            key={user.id}\n            className={classNames({\n              'is-active': currentUserIdFilter === user.id,\n            })}\n            onClick={() => handleUserFilterChange(user.id)}\n          >\n            {user.name}\n          </a>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left has-icons-right\">\n          <input\n            data-cy=\"SearchField\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\">\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"clear-button\"\n                onClick={handleInputClear}\n              />\n            </span>\n          )}\n        </p>\n      </div>\n\n      <div className=\"panel-block is-flex-wrap-wrap\">\n        <a\n          href=\"#/\"\n          data-cy=\"AllCategories\"\n          className={classNames(\n            'button is-success mr-6',\n            {\n              'is-outlined': selectedCategories.length,\n            },\n          )}\n          onClick={() => onCategoryFilterChange([])}\n        >\n          All\n        </a>\n\n        {categories.map(category => (\n          <CategoryButton\n            title={category.title}\n            key={category.title}\n            isActive={selectedCategories.includes(category.id)}\n            onCategoryClick={() => handleCategoryFilterChange(category.id)}\n          />\n        ))}\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          data-cy=\"ResetAllButton\"\n          href=\"#/\"\n          className=\"button is-link is-outlined is-fullwidth\"\n          onClick={handleResetFilters}\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport { ProductsTable } from './components/ProductsTable';\nimport { Filters } from './components/Filters';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nimport './App.scss';\nimport { getFilteredProducts } from './helpers/getFilteredProducts';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(\n    ({ id }) => id === product.categoryId,\n  );\n\n  const user = usersFromServer.find(({ id }) => id === category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [userIdFilter, setUserIdFilter] = useState(0);\n  const [categoryIdsFilter, setCategoryIdsFilter] = useState([]);\n  const [queryFilter, setQueryFilter] = useState('');\n\n  const filteredProducts = getFilteredProducts(\n    products,\n    userIdFilter,\n    categoryIdsFilter,\n    queryFilter,\n  );\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <Filters\n            users={usersFromServer}\n            categories={categoriesFromServer}\n            selectedCategories={categoryIdsFilter}\n            onUserFilterChange={setUserIdFilter}\n            onCategoryFilterChange={setCategoryIdsFilter}\n            onQueryFilterChange={setQueryFilter}\n          />\n        </div>\n\n        <div className=\"box table-container\">\n          {filteredProducts.length > 0 ? (\n            <ProductsTable products={filteredProducts} />\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","export const getFilteredProducts = (\n  products,\n  userId,\n  categoryIds,\n  query,\n) => {\n  let filteredProducts = [...products];\n\n  if (userId > 0) {\n    filteredProducts = filteredProducts.filter(\n      product => product.user.id === userId,\n    );\n  }\n\n  if (categoryIds.length > 0) {\n    filteredProducts = filteredProducts.filter(\n      product => categoryIds.includes(product.categoryId),\n    );\n  }\n\n  if (query) {\n    const normalizedQuery = query\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .join(' ');\n\n    filteredProducts = filteredProducts.filter(\n      product => product.name.toLowerCase().includes(normalizedQuery),\n    );\n  }\n\n  return filteredProducts;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}